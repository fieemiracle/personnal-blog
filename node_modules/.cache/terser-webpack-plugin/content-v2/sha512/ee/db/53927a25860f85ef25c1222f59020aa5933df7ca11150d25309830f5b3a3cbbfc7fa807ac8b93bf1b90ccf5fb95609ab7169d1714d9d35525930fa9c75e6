{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{427:function(n,s,a){\"use strict\";a.r(s);var e=a(1),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[s(\"p\",[n._v(\"本文已参与「新人创作礼」活动，一起开启掘金创作之路。\")]),n._v(\" \"),s(\"p\",[n._v(\"闭包（closure），在JavaScript的学习中，闭包无处不在，与其空谈，不如实干，今天就来了解理解闭包的本质和工作原理吧。\")]),n._v(\" \"),s(\"h2\",{attrs:{id:\"一、闭包的概念\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、闭包的概念\"}},[n._v(\"#\")]),n._v(\" 一、闭包的概念\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）。\")])]),n._v(\" \"),s(\"p\",[n._v(\"请看以下代码：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v('function outer(){\\n    var name=\"来碗盐焗星球\";//局部变量\\n    function inner(){//内部函数\\n        console.log(name);\\n    }\\n    inner();\\n}\\nvar name=\"小新没蜡笔\";//全局变量\\nouter();\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\")])]),s(\"p\",[n._v(\"以上代码，浅显地展示了闭包。实际上，\"),s(\"code\",[n._v(\"创建函数的同时，闭包也会随之产生\")]),n._v(\"。也就是说，inner实际上就是一个闭包！因为inner内部本身没有name变量，但是确确实实打印了值，这就说明inner可以访问其外部函数的变量（局部变量），与此同时，\"),s(\"code\",[n._v(\"闭包刚好就是能够读取其他函数内部变量的函数\")]),n._v(\"，这里可以简单地理解为，闭包可能就是函数内部的子函数，同时它能够访问。\")]),n._v(\" \"),s(\"p\",[n._v(\"但是这不意味着，可以访问外部函数的函数就是一个闭包，而是，是闭包让你可以在一个内层函数中访问到其外层函数的作用域。虽然有点绕，但是理解了本质就迎刃而解了。\")]),n._v(\" \"),s(\"p\",[n._v(\"再看一个常见的闭包效果：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v('function doConsole(name){\\n    setTimeout(()=>{\\n        console.log(name);//来碗盐焗星球\\n    },1000);\\n}\\ndoConsole(\"来碗盐焗星球\");\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\")])]),s(\"p\",[n._v(\"这个例子是常见的定时器，定时器里面的内部匿名函数是回调函数，这是观察闭包效果很好的例子。这个匿名函数作为参数传递给了setTimeout，同时具有函数doConsole作用域的闭包，可以访问到变量name的引用。而在doConsole函数执行完毕之后，它的内部作用域不会被销毁，这就是闭包的神奇之处了。\")]),n._v(\" \"),s(\"h2\",{attrs:{id:\"二、闭包的作用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、闭包的作用\"}},[n._v(\"#\")]),n._v(\" 二、闭包的作用\")]),n._v(\" \"),s(\"p\",[n._v(\"兜兜转转，还是得从闭包的作用出发，方能理解闭包。还记得AO对象和GO对象嘛？不记得\"),s(\"a\",{attrs:{href:\"https://juejin.cn/post/7116516393100853284\",target:\"_blank\",rel:\"noopener noreferrer\"}},[n._v(\"戳这里\"),s(\"OutboundLink\")],1),n._v(\"。\")]),n._v(\" \"),s(\"p\",[n._v(\"（1）实现共有变量（模块化）\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"实现共有变量（模块化），全局变量能够通过闭包实现局部（私有）。\\n例如：累加器\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\" // count是全局变量，污染全局\\n var count=0;\\n function add(){\\n     return count++;\\n } \\n console.log(add());//0\\n console.log(add());//1\\n console.log(add());//2\\n\\n // count不是全局变量\\nfunction add() {\\n    var count=0;\\n    function a() {\\n        count++;\\n        // return count;\\n        console.log(count);//1\\n    }\\n    return a;\\n}\\nvar res = add();\\nres()\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"21\")]),s(\"br\")])]),s(\"p\",[n._v(\"（2）做缓存\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"函数一旦被执行完毕，其内存就会被销毁，而闭包的存在，就可以保有内部环境的作用域。\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"function fruit() {\\n    var food = 'apple'\\n    var people = {\\n      eatFood: function() {\\n        if (food !== '') {\\n          console.log('还有 ' + food);\\n          food = ''\\n        } else {\\n          console.log('没水果了');\\n        }\\n      },\\n      pushFood: function(myfood) {\\n        food = myfood\\n      }\\n    }\\n    return people\\n  }\\n  var person = fruit()\\n  person.eatFood()//还有 apple\\n  person.eatFood()//没水果了\\n  person.pushFood('banana')\\n  person.eatFood()//还有 banana\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"22\")]),s(\"br\")])]),s(\"p\",[n._v(\"（3）实现私有化\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"--闭包可以实现封装，是一种保护私有变量的机制，在函数执行时形成私有的作用域，保护里面的私有变量不受外界干扰。直观的说就是形成一个不销毁的栈环境，使函数可以继续访问定义时的词法作用域。\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v('var name=\"开心超人\"\\nfunction outer(){\\n    var name=\"来碗盐焗星球\";\\n    function inner(){\\n        console.log(name);\\n    }\\n    // inner();\\n    return inner;//inner在使用内部作用域\\n}\\nvar doOuter=outer();这里outer函数已经被调用了！但是因为inner被return，outer的内部作用域依然存在\\ndoOuter();//这就是闭包\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\")])]),s(\"p\",[n._v(\"按照\"),s(\"code\",[n._v(\"垃圾回收机制\")]),n._v(\"，outer执行完毕是会被回收的，释放内存，但是因为闭包的存在，闭包会阻止垃圾回收的进行，所以outer的内部作用域依然存在，依然可以被内部函数访问到。\")]),n._v(\" \"),s(\"p\",[n._v(\"（4）模块化开发\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"--模块化开发可以防止污染全局变量\")]),n._v(\" \"),s(\"p\",[n._v(\"模块函数也可以传参数，模块函数具备条件：\")]),n._v(\" \"),s(\"p\",[n._v(\"（1）有外部的封闭函数，且该函数至少被调用一次，每次调用都会创建一个新的模块实例\")]),n._v(\" \"),s(\"p\",[n._v(\"（2）封闭函数必须返回至少一个内部函数，便于在私有作用域形成闭包，且可以访问或者修改私有状态\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v('// 模块函数\\nfunction aModule(){\\n    var name=\"来碗盐焗星球\"\\n    function inner(){\\n        console.log(name);\\n    }\\n\\n    return {inner:inner}\\n}\\nvar doModule=aModule();\\ndoModule.inner();\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\")])]),s(\"h2\",{attrs:{id:\"三、闭包的缺陷\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、闭包的缺陷\"}},[n._v(\"#\")]),n._v(\" 三、闭包的缺陷\")]),n._v(\" \"),s(\"h3\",{attrs:{id:\"_1-内存泄漏\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-内存泄漏\"}},[n._v(\"#\")]),n._v(\" （1）内存泄漏\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"--简而言之，内存泄漏就是可用空间变小的现象\")]),n._v(\" \"),s(\"p\",[n._v(\"--闭包会导致原有的作用域链不释放，导致\"),s(\"code\",[n._v(\"内存泄漏\")])])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"function b(){\\n       var a=123;\\n      b();//这里b已经被调用一次\\n}\\nb();\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\")])]),s(\"h2\",{attrs:{id:\"四、闭包的应用场景\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、闭包的应用场景\"}},[n._v(\"#\")]),n._v(\" 四、闭包的应用场景\")]),n._v(\" \"),s(\"p\",[n._v(\"闭包其实无处不在，但凡\"),s(\"code\",[n._v(\"使用了回调函数的，实际上就是在使用闭包\")]),n._v(\"。接下来我们来瞅一瞅闭包的经典应用场景。\")]),n._v(\" \"),s(\"h3\",{attrs:{id:\"_1-定时器\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-定时器\"}},[n._v(\"#\")]),n._v(\" （1）定时器\")]),n._v(\" \"),s(\"p\",[n._v(\"定时器的第一个参数接收一个回调函数，这个回调函数可以是匿名的，具名的，也可以是箭头函数。\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v('let name = \"来碗盐焗星球\";\\nsetTimeout(function timeHandler() {\\n    console.log(name);//来碗盐焗星球\\n}, 1000)\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"_2-事件监听器\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-事件监听器\"}},[n._v(\"#\")]),n._v(\" （2）事件监听器\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"<style>\\n    .box{\\n       width: 100px;\\n       height: 100px;\\n       background-color: #bfa;\\n    }\\n</style>\\n<body>\\n    <button id=\\\"btn\\\">点我试试</button>\\n    <button id=\\\"btn01\\\">再点以下试试</button>\\n    <div class=\\\"box\\\"></div>\\n​\\n    <script>\\n        var btn=document.getElementById('btn');\\n        var btn01=document.getElementById('btn01');\\n        var box=document.querySelector('.box')\\n        btn.addEventListener('click',function(){//事件监听器，第二个参数就是一个回调函数，也可以写成箭头函数...\\n            box.style.backgroundColor='pink'\\n        });\\n​\\n        btn01.onclick=function(){\\n            box.style.backgroundColor='red'\\n        };\\n    <\\/script>\\n</body>\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"23\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"24\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"25\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"_3-return一个函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-return一个函数\"}},[n._v(\"#\")]),n._v(\" （3）return一个函数\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"var name = '来碗盐焗星球';\\nfunction fn() {\\n    var name = 20;\\n    function f() {\\n        console.log(name);//蜡笔小新?\\n    }\\n    f();\\n    return f;//此处函数引用，导致fn()执行完毕后，栈内存不会被销毁\\n}\\nvar doName = fn();\\ndoName();//蜡笔小新??\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"_4-异步编程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-异步编程\"}},[n._v(\"#\")]),n._v(\" （4）异步编程\")]),n._v(\" \"),s(\"p\",[n._v(\"其实异步编程有很多类型，比如Ajax异步，Promise函数，async函数。。。，我们以Promise举例：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"let myPromise=new Promise(function(myResolve,myReject){\\n    var num=6;\\n    if(num==6){\\n        myResolve();//成功函数\\n    }else{\\n        myReject();//失败函数，这两个也是回调函数\\n    }\\n});\\nmyPromise.then(\\n    function(value){\\n        console.log('you are right!!');\\n    },\\n    function(error){\\n        console.log('error!!');\\n    }\\n)\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"_5-iife模式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-iife模式\"}},[n._v(\"#\")]),n._v(\" （5）IIFE模式\")]),n._v(\" \"),s(\"p\",[n._v(\"什么是IIFE模式？IIFE模式其实就是比较适合研究闭包的自执行函数。自执行函数也是可以传参的。\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"var name = '来碗盐焗星球';\\n(function doName() {\\n    console.log(name);//来碗盐焗星球\\n})();\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"_6-for循环和闭包\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-for循环和闭包\"}},[n._v(\"#\")]),n._v(\" （6）for循环和闭包\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"function foo() {\\n    for (var i = 0; i < 10; i++) {\\n        // (function (j) {//循环和自执行函数--闭包\\n        //     setTimeout(function () {\\n        //         console.log(j);\\n        //     }, 1000 * j)\\n        // })(i);//\\n        setTimeout(function () {//for循环和定时器回调函数--闭包\\n            console.log(j);\\n        }, 1000, i)\\n    }\\n}\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"_7-块作用域和闭包\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-块作用域和闭包\"}},[n._v(\"#\")]),n._v(\" （7）块作用域和闭包\")]),n._v(\" \"),s(\"p\",[n._v(\"块作用域，在\"),s(\"a\",{attrs:{href:\"https://juejin.cn/post/7116516393100853284\",target:\"_blank\",rel:\"noopener noreferrer\"}},[n._v(\"作用域和作用域链\"),s(\"OutboundLink\")],1),n._v(\"一文中，提到过，像我们接触的let作用域，代码块{}，for循环用let时的作用域，if,while,switch等等。我们以let为例：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"for(let i=1;i<6;i++){\\n    setTimeout(()=>{\\n        console.log(i);\\n    },i*1000);\\n}\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\")])]),s(\"p\",[n._v(\"我们必须知道的是，for循环头部的let声明会使得变量不止被声明一次，这使得结果依次，每隔i*1000，打印1,2,3,4,5.其实这个代码是以下代码演变而来的：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"\\nfor(var i=0;i<=5;i++){\\n    let j=i;//此处便是闭包的块作用域\\n    setTimeout(()=>{\\n        console.log(j);\\n    },j*1000)\\n}\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"_8-函数作为参数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_8-函数作为参数\"}},[n._v(\"#\")]),n._v(\" （8）函数作为参数\")]),n._v(\" \"),s(\"p\",[n._v(\"其实函数作为参数跟回调函数具有异曲同工的效果，请看下面代码：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"var a = '来碗盐焗星球';\\nfunction outer() {\\n    var a = '小猪佩奇';\\n    function inner() {\\n        console.log(a);//小猪佩奇\\n    }\\n    return inner;//此处return的是函数引用\\n}\\n\\nfunction other(func) {//定义形参传入一个函数\\n    var a = '小狗汪汪队';\\n   func();//在此处调用形参\\n}\\nother(outer());//实参为outer函数，根据词法作用域  小猪佩奇\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\")])]),s(\"p\",[n._v(\"以上便是一些简单的闭包使用场景了，简单来说，\"),s(\"code\",[n._v(\"当一个函数被保存到了外部，将会产生闭包\")]),n._v(\"。相信你已经能在慢慢代码海里，一眼认出闭包的。闭包的应用场景总结不是很全面，欢迎评论区补充哟~。\")])])}),[],!1,null,null,null);s.default=t.exports}}]);","extractedComments":[]}