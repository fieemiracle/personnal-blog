{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{432:function(n,s,e){\"use strict\";e.r(s);var t=e(1),a=Object(t.a)({},(function(){var n=this,s=n._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[s(\"p\",[n._v(\"持续创作，加速成长！这是我参与「掘金日新计划 · 10 月更文挑战」的第6天，\"),s(\"a\",{attrs:{href:\"https://juejin.cn/post/7147654075599978532\",title:\"https://juejin.cn/post/7147654075599978532\",target:\"_blank\",rel:\"noopener noreferrer\"}},[n._v(\"点击查看活动详情\"),s(\"OutboundLink\")],1)]),n._v(\" \"),s(\"p\",[n._v(\"你知道new吗？你知道new的实现原理吗？你能手写new方法吗？\")]),n._v(\" \"),s(\"h2\",{attrs:{id:\"一、new做了哪些事\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、new做了哪些事\"}},[n._v(\"#\")]),n._v(\" 一、new做了哪些事？\")]),n._v(\" \"),s(\"p\",[n._v(\"先看看new的使用场景：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"// 1、创建一个构造函数\\nfunction Vehicle(name, price) {\\n    this.name = name\\n    this.price = price\\n}\\n​\\n// 2、new一个实例对象\\nlet truck = new Vehicle()\\nconsole.log(truck); //Vehicle { name: undefined, price: undefined }\\nconsole.log(Object.prototype.toString.call(truck)); //[object Object]\\n​\\n// 传入参数\\nlet car = new Vehicle('car', '￥9999999')\\nconsole.log(car);\\n//Vehicle { name: 'car', price: '￥9999999' }\\n​\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\")])]),s(\"p\",[n._v(\"司空见惯的代码，烂熟于心的写法，那你知道new具体做了哪些事情嘛？从上述代码可以看出，一个构造函数使用new操作符调用的时候，会生成一个具有构造函数相同属性的新对象。是不是很奇怪？明明Vehicle是构造函数：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"console.log(typeof Vehicle); //function\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\")])]),s(\"p\",[n._v(\"然而，经过new的一番操作后，它的实例化是一个对象！！！new到底做了哪些事情呢?对于这个例子，我们可以概括为以下事情：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"​\\n    // 第一件：在构造函数内部，创建一个this对象\\n    let this = {\\n        name = name,\\n        price = price\\n    }\\n​\\n    // 第二件：返回this对象\\n    return this;\\n​\\n    // 第三件：给this对象的属性赋值\\n    this.name = name\\n    this.price = price\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\")])]),s(\"p\",[n._v(\"很抽象，看不懂。。。进一步剖析如下：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"function Person(name, gender) {\\n    console.log('赋值前的this=', this); //赋值前的this= Person {}\\n    this.name = name\\n    this.gender = gender\\n    console.log('赋值后的this=', this); //赋值后的this= Person { name: '小灰灰', gender: 'boy' }\\n}\\n​\\nlet child = new Person('小灰灰', 'boy')//Person { name: '小灰灰', gender: 'boy' }\\nconsole.log(child);\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\")])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/017ae5d1a00043f8aa562969565e77fe~tplv-k3u1fbpfcp-watermark.image?\",alt:\"image.png\"}})]),n._v(\" \"),s(\"p\",[n._v(\"由以上代码可以看出，\")]),n._v(\" \"),s(\"p\",[n._v(\"第一：在构造函数内部有一个空的this对象，通过new操作符，会创建生成一个全新的对象（实例对象）。\")]),n._v(\" \"),s(\"p\",[n._v(\"第二：实例对象会执行[[Prototype]]（ \"),s(\"strong\",[n._v(\".proto\")]),n._v(\"）链接，并且实例对象的this会指向构造函数的this（实例对象会绑定函数调用的this）。通过new创建的实例对象最终被[[Prototype]]（ \"),s(\"strong\",[n._v(\".proto\")]),n._v(\"）链接到构造函数的Prototype对象上。也就是说，\"),s(\"strong\",[n._v(\"实例对象的隐式原型===构造函数的显示原型\")])]),n._v(\" \"),s(\"h2\",{attrs:{id:\"二、返回不同类型时有哪些表现\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、返回不同类型时有哪些表现\"}},[n._v(\"#\")]),n._v(\" 二、返回不同类型时有哪些表现？\")]),n._v(\" \"),s(\"p\",[n._v(\"创建一个构造函数X，通过new操作符，实例化X得到实例化对象x，打印x,一定会是X{...}这个对象嘛？当构造函数内部有返回值，并且返回的是不同类型的值，打印的结果又会是怎么样呢？\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"function Student(id, name) {\\n    this.id = id\\n    this.name = name\\n​\\n    // 返回基本类型的值时：返回的结果依然是对象Student {name:xxx,age:xxx}\\n    // return null   //Student { id: '1001', name: 'cat' }\\n    // return undefined //Student { id: '1001', name: 'cat' }\\n    // return 123        //Student { id: '1001', name: 'cat' }\\n    // return 'hello world'   //Student { id: '1001', name: 'cat' }\\n    // return true  //Student { id: '1001', name: 'cat' }\\n    // return false  //Student { id: '1001', name: 'cat' }\\n    //return Symbol('abc')  //Student { id: '1001', name: 'cat' }\\n​\\n    // 返回引用类型时：\\n    //返回空对象时：返回的结果是空对象\\n    // return {}  //{}\\n    //返回函数时，返回的结果是函数\\n    return function() {} //[Function (anonymous)]\\n    // return [] //[]\\n    // return new Date() //2022-10-24T04:44:18.581Z\\n    // return new Error() //Error...\\n}\\n​\\nlet student = new Student('1001', 'cat')\\nconsole.log(student); //构造函数内部返回不同类型的值时，这里的打印结果是一样的吗？\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"23\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"24\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"25\")]),s(\"br\")])]),s(\"h2\",{attrs:{id:\"三、手写new的实现原理\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、手写new的实现原理\"}},[n._v(\"#\")]),n._v(\" 三、手写new的实现原理?\")]),n._v(\" \"),s(\"p\",[n._v(\"思路：new的实现原理核心是new做了哪些事情。\")]),n._v(\" \"),s(\"p\",[n._v(\"总结：\\n（1）通过new操作符调用构造函数，会返回一个全新的对象，这个对象的属性是构造函数的参数。\")]),n._v(\" \"),s(\"p\",[n._v(\"若构造函数内部有返回值，且返回值是基本数据类型（number|string|null|undefined|Symbol|boolean），则实例对象的返回结果是原本的对象；\")]),n._v(\" \"),s(\"p\",[n._v(\"若返回值是引用数据类型（Object|Array|Function|Date|RegExp|Error），则实例对象的返回的结果就是引用类型对应的值。\")]),n._v(\" \"),s(\"p\",[n._v(\"（2）通过new操作符创建的实例对象的隐式原型会挂载到构造函数的显示原型上。实例对象.\"),s(\"strong\",[n._v(\"proto\")]),n._v(\"==构造函数.prototype。\")]),n._v(\" \"),s(\"p\",[n._v(\"（3）通过new操作符创建的实例对象的this会绑定调用函数的this\\n请看如下代码：\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"// new的实现原理\\nfunction newPerson() {\\n    // 先return一个对象\\n    var obj = {};\\n    \\n    var constructor = Array.prototype.shift.call(arguments); //把数组的shift方法借给constructor使用\\n    \\n    // 实例对象的隐式原型===构造函数的显示原型\\n    obj._proto_ = constructor.prototype;\\n    var result = constructor.apply(obj, arguments);\\n    return typeof result === 'object' && result != 'null' ? result : obj;\\n}\\n​\\nlet p = newPerson(Person, 'hunny')\\nconsole.log(p); //{ _proto_: {}, name: 'hunny', age: undefined }\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\")])])])}),[],!1,null,null,null);s.default=a.exports}}]);","extractedComments":[]}