{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{418:function(s,n,e){\"use strict\";e.r(n);var a=e(1),r=Object(a.a)({},(function(){var s=this,n=s._self._c;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"p\",[s._v(\"本文已参与「新人创作礼」活动，一起开启掘金创作之路。\")]),s._v(\" \"),n(\"p\",[s._v(\"知道Promise对象的你，知道在使用Promise对象的时候，我们如何做到在使用中如鱼得水嘛？10分钟带你迅速上手！\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"一、promise的诞生\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、promise的诞生\"}},[s._v(\"#\")]),s._v(\" 一、Promise的诞生\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_1、回调地狱\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、回调地狱\"}},[s._v(\"#\")]),s._v(\" 1、回调地狱\")]),s._v(\" \"),n(\"p\",[s._v(\"最初javascript的异步实现就是使用回调函数。回调地狱就是：一个函数需要等它的回调函数（或者回调和回调的回调...）执行完毕之后再执行。简单来说，\"),n(\"code\",[s._v(\"回调函数里面嵌套回调函数\")]),s._v(\"。而因为回调地狱的问题，Promise就出现了。我们看看什么是回调地狱：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"// 回调地狱\\n//地狱回调\\nsetTimeout(function () {  //第一层\\n    console.log(1);//等4秒打印1，然后执行下一个回调函数\\n    setTimeout(function () {  //第二层\\n        console.log(2);//等3秒打印2，然后执行下一个回调函数\\n        setTimeout(function () {   //第三层\\n            console.log(3);//等2秒打印3，然后执行下一个回调函数\\n            setTimeout(function () {   //第四层\\n                console.log(4);//等1秒打印4\\n            }, 1000)\\n        }, 2000)\\n    }, 3000)\\n}, 4000)\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\")])]),n(\"p\",[s._v(\"可看出\"),n(\"code\",[s._v(\"回调地狱的特点\")]),s._v(\"：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"1.难以复用\\n2.堆栈信息被断开\\n3.借助外层变量\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"回调地狱是为了让我们代码执行顺序的一种操作（解决异步），但是它会使我们的可读性非常差。当你有100个，1000个...，代码会不断右移，不够优雅，也会影响性能。嵌套和缩进只是回调地狱的一个梗而已，它导致的问题远非嵌套导致的可读性降低而已。接下里我们今天的目的，就是将上面的回调地狱用Promise解决。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"二、promise的行为\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、promise的行为\"}},[s._v(\"#\")]),s._v(\" 二、Promise的行为\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_1、promise的语法\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、promise的语法\"}},[s._v(\"#\")]),s._v(\" 1、Promise的语法\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"Promise的基本语法\")]),s._v(\"：Promise函数接收一个函数作为参数，这个函数有两个参数，一个是成功函数(resolve)，一个是失败函数(reject)。Promise的.then接收两个回调函数，一个是成功函数的回调，一个是失败函数的回调。这两个函数可选，不一定要提供\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('//Promise语法\\nlet myPromise = new Promise(function(resolve, reject) {\\n    // \"Producing Code\"（可能需要一些时间）\\n    \\n      resolve(); // 成功时\\n      reject();  // 出错时\\n    });\\n    \\n    // \"Consuming Code\" （必须等待一个兑现的承诺）\\n    myPromise.then(\\n      function(value) { /* 成功时的代码 */ },\\n      function(error) { /* 出错时的代码 */ }\\n    );\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\")])]),n(\"blockquote\",[n(\"p\",[s._v(\"特别注意：\")]),s._v(\" \"),n(\"p\",[s._v(\"（1）Promise对象中的状态不会被外界干扰。状态的改变取决于异步的操作结果。\")]),s._v(\" \"),n(\"p\",[s._v(\"（2）Promise对象的状态一旦被改变，就不会进行再次改变。\\n例如：\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"let myPromise = new Promise((resolve, reject) => {\\n    setTimeout(() => {\\n        resolve('ok');//第一次状态为成功\\n        reject('no');//不会改变\\n    })\\n}).then(\\n    function (result) { console.log('resolved'); },//成功状态执行then后面的成功回调函数\\n    function (error) { console.log('reject'); }\\n)\\n//resolved\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\")])]),n(\"blockquote\",[n(\"p\",[s._v(\"（3）Promise新建后就会立即执行，Promise后面的.then是一个异步操作，在事件循环中叫做“微任务”。会放在同步代码后面执行。\\n例如：\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"let myPromise=new Promise((resolve,reject)=>{\\n    console.log('Promise');//1\\n    resolve();\\n})\\n    .then(()=>{//这里是一个异步操作\\n        console.log('succeed');//3\\n    })\\nconsole.log('Promise resolved');//2\\n// Promise\\n// Promise resolved\\n// succeed\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"_2、promise的方法\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、promise的方法\"}},[s._v(\"#\")]),s._v(\" 2、Promise的方法\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_1-promise-prototype-then\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-promise-prototype-then\"}},[s._v(\"#\")]),s._v(\" （1）Promise.prototype.then()\")]),s._v(\" \"),n(\"p\",[s._v(\"then方法的返回结果是\"),n(\"code\",[s._v(\"新的Promise实例\")]),s._v(\"，对象状态由回调函数的执行结果决定。then方法后面还可以再调用另一个then方法，形成链条。采用\"),n(\"code\",[s._v(\"链式的then\")]),s._v(\"，可以指定一组\"),n(\"code\",[s._v(\"按照次序调用\")]),s._v(\"的回调函数。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('const p = new Promise((resolve, reject) => {\\n    setTimeout(() => {\\n        //设置 p 对象的状态为失败，并设置失败的值 \\n        reject(\"出错啦!\");\\n    }, 1000)\\n});\\np.then(\\n    function(value){},\\n    function(reason){console.log(reason);}\\n)\\n.then(()=>{\\n    console.log(123)\\n});\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_2-promise-prototype-catch\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-promise-prototype-catch\"}},[s._v(\"#\")]),s._v(\" （2）Promise.prototype.catch()\")]),s._v(\" \"),n(\"p\",[s._v(\"catch()用于指定发生错误时的回调函数.例如：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('const p = new Promise((resolve, reject) => {//p为Promise的实例\\n    setTimeout(() => {\\n        //设置 p 对象的状态为失败，并设置失败的值 \\n        reject(\"出错啦!\");//reject()方法的作用，等同于抛出错误\\n    }, 1000)\\n});\\n// p.then(function(value){},function(reason){\\n// // console.error(reason); \\n// console.log(reason);\\n// });\\n​\\np.catch(function (reason) {//相当于上面的.then(...)\\n    console.log(reason);//捕获reject状态的值\\n});\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\")])]),n(\"p\",[s._v(\"建议总是使用\"),n(\"code\",[s._v(\"catch()\")]),s._v(\"方法，而不使用\"),n(\"code\",[s._v(\"then()\")]),s._v(\"方法的第二个参数.\")]),s._v(\" \"),n(\"p\",[s._v(\"catch()还可以这样使用：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"const myPromise = new Promise(function(resolve, reject) {\\n    throw new Error('出错啦');//从这抛出错误，catch()指定的回调函数也可以捕获\\n  });\\n  promise.catch(function(error) {\\n    console.log(error);\\n});\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_3-promise-prototype-finally\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-promise-prototype-finally\"}},[s._v(\"#\")]),s._v(\" （3）Promise.prototype.finally()\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"finally()\")]),s._v(\"方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。而且\"),n(\"code\",[s._v(\"finally\")]),s._v(\"方法总是会返回原来的值。举个例子：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"function a(){\\n    return new Promise((resolve,reject)=>{\\n        resolve('ok')\\n    },1000)\\n}\\n​\\nfunction b(){\\n    return new Promise((resolve,reject)=>{\\n        setTimeout(()=>{\\n            reject('no')\\n        },1500)\\n    })\\n}\\nfunction c(){\\n    setTimeout(()=>{\\n         console.log('finally');\\n    },500)\\n   \\n}\\na()\\n    .then((res)=>{\\n        console.log(res);\\n        return b()\\n    })\\n    .catch((err)=>{\\n        console.log(err);\\n    })\\n    .finally(c)//参数不是回调函数，如果是回调函数也不需要带参\\n​\\n//ok\\n//no\\n//finally //说明finally()照样执行，有打印\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_4-promise-resolve\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-promise-resolve\"}},[s._v(\"#\")]),s._v(\" （4）Promise.resolve()\")]),s._v(\" \"),n(\"p\",[s._v(\"将现有对象转为 Promise 对象,状态为\"),n(\"code\",[s._v(\"resolved\")]),s._v(\"。举例如下：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"let myString='hello';\\nconsole.log(myString);//hello\\n\\nconst myPromise=Promise.resolve(myString)//带参\\n//等同于const myPromise=Promise.resolve('hello')\\nconsole.log(myPromise);//Promise { 'hello' }\\n\\nmyString=Promise.resolve();//不带参，直接调用\\nconsole.log(myString);//Promise { undefined }\\nmyString.then(result=>{//说明myString已经是Promise对象了，只有Promise对象才有.then\\n    console.log(result);//undefined\\n})\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_5-promise-reject\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-promise-reject\"}},[s._v(\"#\")]),s._v(\" （5）Promise.reject()\")]),s._v(\" \"),n(\"p\",[s._v(\"也会返回一个新的 Promise 实例，该实例的状态为\"),n(\"code\",[s._v(\"rejected\")]),s._v(\"。简单举例：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"// 以上代码等于\\nconst p=new Promise((resolve,reject)=>{\\n    reject('error')\\n})\\np.catch(error=>{\\n    console.log(error);//error\\n})\\n// 或者\\np.then(function(){},function(error){console.log(error);})//error\\n// 或者\\np.then(null,function(error){console.log(error);})//error\\n// 或者\\np.then(undefined,function(error){console.log(error);})//error\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_6-promise-all\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-promise-all\"}},[s._v(\"#\")]),s._v(\" （6）Promise.all()\")]),s._v(\" \"),n(\"p\",[s._v(\"all()是将多个 Promise 实例，包装成一个新的 Promise 实例。接收一个数组作为参数，数组的每一项都是·Promise对象的实例。如果不是，会通过Promise.resolve()将参数转为Promise实例，再进行处理。\"),n(\"code\",[s._v(\"all()用于将多个 Promise 实例，包装成一个新的 Promise 实例\")]),s._v(\"。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"// promise.all()\\nconst myPromise1=new Promise((resolve,reject)=>{\\n    resolve('sure');\\n})\\n    .then(result=>result)\\n\\nconst myPromise2=new Promise((resolve,reject)=>{\\n    reject('cancel')\\n})\\n    .then(result=>result)\\n    .catch(error=>error)//myPromise2有自己的catch\\n//感兴趣的小伙伴可以尝试，如果删除myPromise2.catch(...)后Promise.all([myPromise1,myPromise2])会如何？\\n\\nPromise.all([myPromise1,myPromise2])//myPromise1,myPromise2都处于成功状态\\n    .then(result=>{console.log(result);})//走这里  [ 'sure', 'cancel' ]\\n    .catch(error=>{console.log(error);})\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_7-promise-race\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-promise-race\"}},[s._v(\"#\")]),s._v(\" （7）Promise.race()\")]),s._v(\" \"),n(\"p\",[s._v(\"race()是将多个 Promise 实例，包装成一个新的 Promise 实例。接收一个数组作为参数，数组的每一项都是·Promise对象的实例。如果不是，会通过promise.resolve()将参数转为Promise实例，再进行处理。\"),n(\"code\",[s._v(\"只要参数的Promise实例有一个率先改变状态，则状态改变\")]),s._v(\"。例如：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"const myPromise2 = new Promise((resolve, reject) => {\\n    setTimeout(()=>{\\n       reject('cancel') \\n    },3000)\\n    //如果将时间改为<2000,Promise.race([myPromise1, myPromise2])走哪一步呢？\\n    \\n})\\n    .then(result => result)\\n    .catch(error => error)\\nconst myPromise1 = new Promise((resolve, reject) => {\\n    setTimeout(()=>{\\n        resolve('sure');\\n    },2000)//myPromise1比myPromise2更先改变状态\\n    \\n})\\n    .then(result => result)\\n​\\n​\\nPromise.race([myPromise1, myPromise2])\\n    .then(result => { console.log(result); })//走这里，sure\\n    .catch(error => { console.log(error); })\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\")])]),n(\"blockquote\",[n(\"p\",[s._v(\"简要说一下const p1=Promise.all([promise1,promise2,promise3]) 和const p2=Promise.race([promise1,promise2,promise3])的\"),n(\"code\",[s._v(\"区别\")]),s._v(\"：\")]),s._v(\" \"),n(\"p\",[s._v(\"--前者Promise的实例状态都为resolved时，p1调用.then()里面成功时的回调函数；如果实例状态有一个为rejected，p1调用.then()里面失败时的函数或者走.catch()\")]),s._v(\" \"),n(\"p\",[s._v(\"--后者注重时序，如果率先改变状态的实例为resolved，则p2为reslove状态；否则，为reject状态。\")])]),s._v(\" \"),n(\"h2\",{attrs:{id:\"三、promise的场景\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、promise的场景\"}},[s._v(\"#\")]),s._v(\" 三、Promise的场景\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_1、ajax请求\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、ajax请求\"}},[s._v(\"#\")]),s._v(\" 1、Ajax请求\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"<head>\\n    <script src=\\\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js\\\"><\\/script>\\n</head>\\n<body>\\n   <div class=\\\"name\\\">\\n      <audio id=\\\"audio\\\" controls></audio>\\n   </div>\\n        \\n   <script>\\n      function getSong() {\\n       return new Promise((resolve, reject) => {\\n       $.ajax({\\n        url: 'https://www.fastmock.site/mock/c024e8920dd6003c63dcd9ed2bbf6cb9/music/music',\\n        dataType: 'json',\\n        success(res) {\\n            console.log(res);\\n            url = res[0].url;\\n        }\\n    })\\n      resolve();\\n    })\\n  }\\n\\n            function playSong() {\\n                let audio = document.getElementById('audio');\\n                window.addEventListener('click', function () {\\n                audio.src = url;\\n                audio.play()\\n            })\\n\\n            }\\n            getSong().then(playSong())\\n    <\\/script>\\n</body>\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_2、文件读取\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、文件读取\"}},[s._v(\"#\")]),s._v(\" 2、文件读取\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"// 引入fs模块\\nconst fs=require('fs');\\n// 使用Promise封装\\nconst P=new Promise(function(resolve,reject){\\n    fs.readFile('./text/2.md',(err,data)=>{\\n        // 如果地址错误，抛出异常\\n        if(err) reject(err) ;\\n        \\n        // 如果成功，输出内容\\n        resolve(data);\\n    });\\n});\\n\\nP.then(function(value){\\n    console.log(value.toString());\\n},function(reason){\\n    console.log(\\\"defeat!!!!\\\");\\n});\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_3、图片加载\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、图片加载\"}},[s._v(\"#\")]),s._v(\" 3、图片加载\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"<body>\\n    <img src=\\\"http://m.imeitou.com/uploads/allimg/220514/5-220514101036.jpg\\\" alt=\\\"风景\\\" id=\\\"myImage\\\">\\n\\n    <script>\\n        const preloadImage = function (path) {\\n            return new Promise(function (resolve, reject) {\\n                const image = new Image();\\n                // 图片加载成功\\n                image.onload=()=>{\\n                    resolve(image)\\n                }\\n                // 图片加载失败\\n                image.onerror=()=>{\\n                    reject('sorry,cannot loding picture')\\n                };\\n                image.src = path;\\n            });\\n        };\\n\\n        // 获取图片DOM节点\\n        var preImage=document.getElementById('myImage')\\n        // 图片预加载\\n        preloadImage('http://m.imeitou.com/uploads/allimg/220512/5-220512111J0-50.jpg')\\n        .then(targetImage=>\\n            // 点击页面切换图片，让图片加载\\n            window.onclick=function(){\\n                setTimeout(()=>{\\n                       preImage.src=targetImage.src\\n                },1000)\\n            }\\n        )\\n\\n    <\\/script>\\n</body>\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"_4、函数封装\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4、函数封装\"}},[s._v(\"#\")]),s._v(\" 4、函数封装\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"//例如将微信小程序里的showModal进行Promise封装，那么在任何需要用到此函数的直接引入就很方便了\\n// promise形式 封装 showModal\\nexport const showModal=({content})=>{\\n    return new Promise((resolve,reject)=>{\\n        wx.showModal({\\n          title:'提示',\\n          content:content,\\n            success: (result) => {\\n                resolve(result);\\n            },\\n            fail: (err) => {\\n                reject(err);\\n            }\\n        });\\n          \\n    })\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"四、promise的短板\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、promise的短板\"}},[s._v(\"#\")]),s._v(\" 四、Promise的短板\")]),s._v(\" \"),n(\"p\",[s._v(\"1.无法取消Promise,一旦新建它就会立即执行，无法中途取消\")]),s._v(\" \"),n(\"p\",[s._v(\"2.如果不设置回调函数，Promise内部抛出的错误，不会反映到外部\")]),s._v(\" \"),n(\"p\",[s._v(\"3.当处于pending状态时，无法得知目前进展到哪一个阶段，是刚刚开始还是即将完成\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"总结\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结\"}},[s._v(\"#\")]),s._v(\" 总结\")]),s._v(\" \"),n(\"p\",[s._v(\"恭喜你看到文章末尾了，相信你可以写出Promise方案解决第一个回调地狱的异步问题了，快去试试把！\")])])}),[],!1,null,null,null);n.default=r.exports}}]);","extractedComments":[]}