(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{425:function(a,s,r){"use strict";r.r(s);var e=r(1),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("本文已参与「新人创作礼」活动，一起开启掘金创作之路。")]),a._v(" "),s("p",[a._v("你真的熟悉数组嘛？你知道小程序经常使用的数组方法吗？数组方法很多，也总是让人记不住，本文将摘选一些在小程序中经常使用的方法，包括数组迭代方法，以及一些在算法题目上屡用不爽的简单方法，快来看看吧~。")]),a._v(" "),s("h2",{attrs:{id:"一、必须熟悉的数组迭代方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、必须熟悉的数组迭代方法"}},[a._v("#")]),a._v(" 一、必须熟悉的数组迭代方法")]),a._v(" "),s("p",[a._v("数组迭代--对每个数组项进行操作。\n在小程序中，这些迭代方法（遍历方法）不仅可以简写代码，还能节约性能，而且用起来也比较灵活，以后需要操作数组，再也不会只知道循环了。")]),a._v(" "),s("h3",{attrs:{id:"参数意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数意义"}},[a._v("#")]),a._v(" 参数意义")]),a._v(" "),s("ul",[s("li",[a._v("total：总数（初始值/先前返回的值）")]),a._v(" "),s("li",[a._v("value：项目值")]),a._v(" "),s("li",[a._v("index：项目索引")]),a._v(" "),s("li",[a._v("array：数组本身")]),a._v(" "),s("li",[a._v("item：必需。要检索的项目")]),a._v(" "),s("li",[a._v("start：可选。从哪里开始搜索")])]),a._v(" "),s("h3",{attrs:{id:"_1、array-foreach-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、array-foreach-value-index-array"}},[a._v("#")]),a._v(" 1、Array.forEach(value,index,array）")]),a._v(" "),s("p",[s("code",[a._v("（1）不会更改原始数组")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const myArray=[1,2,3,4,5];\n\nlet alterArray=myArray.forEach(value=>{\n\n value = value*2;\n\n})\n\nconsole.log(myArray);//[ 1, 2, 3, 4, 5 ]\n\nconsole.log(alterArray);//Object [Array Iterator] {}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h3",{attrs:{id:"_2、array-map-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、array-map-value-index-array"}},[a._v("#")]),a._v(" 2、Array.map(value,index,array)")]),a._v(" "),s("p",[s("code",[a._v("（1）通过对每个数组元素执行函数来创建新数组")])]),a._v(" "),s("p",[s("code",[a._v("（2）不会对没有值的数组元素执行函数")])]),a._v(" "),s("p",[s("code",[a._v("（3）不会更改原始数组")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray1=myArray.map(value=>{\n\n  return value*2;\n\n});\n\nconsole.log(myArray);//[ 1, 2, 3, 4, 5 ]\n\nconsole.log(alterArray1);//[ 2, 4, 6, 8, 10 ]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("foreach()和map()区别在于："),s("code",[a._v("forEach()没有返回值，map（）有返回值")]),a._v("。")]),a._v(" "),s("h3",{attrs:{id:"_3、array-filter-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、array-filter-value-index-array"}},[a._v("#")]),a._v(" 3、Array.filter(value,index,array)")]),a._v(" "),s("p",[s("code",[a._v("（1）创建一个包含通过测试的数组元素的新数组")])]),a._v(" "),s("p",[s("code",[a._v("（2）不会更改原始数组")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray2=myArray.filter(value=>{\n\n  return value%2==0;\n\n});\n\nconsole.log(myArray);//[ 1, 2, 3, 4, 5 ]\n\nconsole.log(alterArray2);//[ 2, 4 ]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h3",{attrs:{id:"_4、array-reduce-total-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、array-reduce-total-value-index-array"}},[a._v("#")]),a._v(" 4、Array.reduce(total, value, index, array)")]),a._v(" "),s("p",[s("code",[a._v("（1）在每个数组元素上运行函数，以便生成（减少它）单个值")])]),a._v(" "),s("p",[s("code",[a._v("（2）在数组中从左到右工作")])]),a._v(" "),s("p",[s("code",[a._v("（3）不会减少原始数组")])]),a._v(" "),s("p",[s("code",[a._v("（4）可接受一个初始值")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray3=myArray.reduce((total,value)=>{\n\n  return total+value;\n\n});\n\nconsole.log(myArray);//[ 1, 2, 3, 4, 5 ]\n\nconsole.log(alterArray3);//15\n\n\n\nlet alterArray4=myArray.reduce((total,value)=>{\n\n  return total+value;\n\n},100);\n\nconsole.log(alterArray4);//115\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("h3",{attrs:{id:"_5、array-reduceright-total-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、array-reduceright-total-value-index-array"}},[a._v("#")]),a._v(" 5、Array.reduceRight(total, value, index, array)")]),a._v(" "),s("p",[s("code",[a._v("（1）在每个数组元素上运行函数，以便生成（减少它）单个值")])]),a._v(" "),s("p",[s("code",[a._v("（2）在数组中从右到左工作")])]),a._v(" "),s("p",[s("code",[a._v("（3）不会减少原始数组")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray5=myArray.reduce((total,value)=>{\n\n  return total+value;\n\n});\n\nconsole.log(myArray);//[ 1, 2, 3, 4, 5 ]\n\nconsole.log(alterArray5);//15\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h3",{attrs:{id:"_6、array-every-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、array-every-value-index-array"}},[a._v("#")]),a._v(" 6、Array.every(value, index, array)")]),a._v(" "),s("p",[s("code",[a._v("（1）检查所有数组是否通过测试")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray6=myArray.every((total,value)=>{\n\n  return value%2==1;\n\n});\n\nconsole.log(alterArray6);//false\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h3",{attrs:{id:"_7、array-some-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、array-some-value-index-array"}},[a._v("#")]),a._v(" 7、Array.some(value, index, array)")]),a._v(" "),s("p",[s("code",[a._v("（1）检查某些数组值是否通过测试")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray7=myArray.some((total,value)=>{\n\n  return value%2==1;\n\n});\n\nconsole.log(alterArray7);//true\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h3",{attrs:{id:"_8、array-indexof-item-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、array-indexof-item-start"}},[a._v("#")]),a._v(" 8、Array.indexOf(item, start)")]),a._v(" "),s("p",[s("code",[a._v("（1）如果未找到项目，Array.indexOf() 返回 -1。")])]),a._v(" "),s("p",[s("code",[a._v("（2）如果项目多次出现，则返回第一次出现的位置。")])]),a._v(" "),s("p",[s("code",[a._v("（3）start：可选。从哪里开始搜索。负值将从结尾开始的给定位置开始，并搜索到结尾。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray8=myArray.indexOf(10);\n\nconsole.log(alterArray8);//-1  \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_9、array-lastindexof-item-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、array-lastindexof-item-start"}},[a._v("#")]),a._v(" 9、Array.lastIndexOf(item, start)")]),a._v(" "),s("p",[s("code",[a._v("（1）start 可选。从哪里开始搜索。负值将从结尾开始的给定位置开始，并搜索到开头。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray9=myArray.indexOf(10);\n\nconsole.log(alterArray9);//-1  \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_10、array-find-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、array-find-value-index-array"}},[a._v("#")]),a._v(" 10、Array.find(value, index, array)")]),a._v(" "),s("p",[s("code",[a._v("（1）返回通过测试函数的第一个数组元素的值")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray10=myArray.find(value=>{\n\n  return value>3;\n\n});\n\nconsole.log(alterArray10);//4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h3",{attrs:{id:"_11、array-findindex-value-index-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、array-findindex-value-index-array"}},[a._v("#")]),a._v(" 11、Array.findIndex(value, index, array)")]),a._v(" "),s("p",[s("code",[a._v("（1）返回通过测试函数的第一个数组元素的索引")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let alterArray11=myArray.findIndex(value=>{\n\n  return value>3;\n\n});\n\nconsole.log(alterArray11);//3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h2",{attrs:{id:"二、必须会的简单方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、必须会的简单方法"}},[a._v("#")]),a._v(" 二、必须会的简单方法")]),a._v(" "),s("h3",{attrs:{id:"_1、反转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、反转"}},[a._v("#")]),a._v(" 1、反转")]),a._v(" "),s("p",[a._v("--Array.reverse()")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const arr=[1,2,3,4,5]\nconsole.log(arr.reverse());//[ 5, 4, 3, 2, 1 ]\n\nconst strArr=['apple','pear','peach','watermelon','strawberry']\nconsole.log(strArr.reverse());//[ 'strawberry', 'watermelon', 'peach', 'pear', 'apple' ]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"_2、切割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、切割"}},[a._v("#")]),a._v(" 2、切割")]),a._v(" "),s("p",[a._v("slice()和splice()分不清？不可能！先看例子：")]),a._v(" "),s("p",[s("code",[a._v("（1）--slice() 方法用数组的某个片段切出新数组")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// 一个参数时，比如从数组元素 （\"myself\"）开始切出一段数组\nconst person=['grandfather','grandmother','father','mother','brother','sister','myself','son','dauther'];\nconsole.log(person.slice(person.indexOf('myself')));//从起点开始切到最后 [ 'myself', 'son', 'dauther' ]\nconsole.log(person.slice(-2));//反方向切2个元素  [ 'son', 'dauther' ]\nconsole.log(person);//slice() 方法创建新数组，不改变原数组\n\n// 两个参数时，比如从数组元素“grandfather”切到“myself”\nconsole.log(person.slice(person.indexOf('grandfather'),person.indexOf('myself')));//切左不切右\n//[ 'grandfather', 'grandmother', 'father' ,'mother','brother','sister']\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[s("code",[a._v("--splice() 方法可用于向数组添加新项，或者在数组中不留“空洞”的情况下移除元素")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// 第一个参数:添加新元素的位置（拼接）。\n// 第二个参数:删除多少元素。\n// 其余参数:要添加的新元素。\n// splice() 方法返回一个包含已删除项的数组\nconst myArr=['you','are','a','big','banana','!']\n// 现在在\"are\"后面添加\"not\"\nmyArr.splice(2,0,'not')\nconsole.log(myArr);//会改变原数组   [ 'you', 'are', 'not', 'a', 'big', 'banana', '!' ]\n\n// 能够使用 splice() 在数组中不留空洞的情况下移除元素\n// 第一个参数:新元素应该被添加（接入）的位置。\n// 第二个参数:删除几个元素。\n// 现在删除末尾的感叹号\"!\"\nconsole.log(myArr.splice(myArr.length-1,1));//返回被删除的元素 [ '!' ]\nconsole.log(myArr);//会改变原数组  [ 'you', 'are', 'not', 'a', 'big', 'banana' ]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("p",[a._v("综上所述：")]),a._v(" "),s("p",[a._v("slice()和splice()的区别有以下几点：")]),a._v(" "),s("p",[a._v("（1）作用不同")]),a._v(" "),s("p",[a._v("（2）slice()不会改变原数组，splice()会改变原数组")]),a._v(" "),s("p",[a._v("（3）slice()返回的是切出的新片段，splice()返回的是删除的元素")]),a._v(" "),s("h3",{attrs:{id:"_3、类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、类型转换"}},[a._v("#")]),a._v(" 3、类型转换")]),a._v(" "),s("p",[a._v("--tostring()和join()，以及Array.from()")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// toString() 把数组转换为数组值（逗号分隔）的字符串。\nvar fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nconsole.log( fruits.toString());//Banana,Orange,Apple,Mango\n\n// join() 方法也可将所有数组元素结合为一个字符串。行为类似 toString()，但是可以规定分隔符\nconsole.log(fruits.join(\"\")); //BananaOrangeAppleMango\n\n// Array.from(),将其他类型转为数组\nvar str='abcdef';\nconsole.log(Array.from(str));//[ 'a', 'b', 'c', 'd', 'e', 'f' ]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"_4、排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、排序"}},[a._v("#")]),a._v(" 4、排序")]),a._v(" "),s("p",[a._v("排序炒鸡简单，只需要记住一行代码既可。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr=[11,54,23,45,67,12,34];\narr=arr.sort((a,b)=>a-b);//升序 [11,12,23,45,54,67]\n// arr=arr.sort((a,b)=>b-a);//降序 [67, 54, 45, 34,23, 12, 11]\nconsole.log(arr);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("以上方法都是在小程序中比较常见的方法，快快过个眼吧~。有遗漏的，评论区补充。")])])}),[],!1,null,null,null);s.default=n.exports}}]);