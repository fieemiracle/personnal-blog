(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{443:function(n,s,e){"use strict";e.r(s);var a=e(1),t=Object(a.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("持续创作，加速成长！这是我参与「掘金日新计划 · 10 月更文挑战」的第1天，"),s("a",{attrs:{href:"https://juejin.cn/post/7147654075599978532",title:"https://juejin.cn/post/7147654075599978532",target:"_blank",rel:"noopener noreferrer"}},[n._v("点击查看活动详情"),s("OutboundLink")],1)]),n._v(" "),s("h2",{attrs:{id:"一、认识typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、认识typescript"}},[n._v("#")]),n._v(" 一、认识Typescript")]),n._v(" "),s("p",[n._v("(1)Javascript是一种动态类型的弱类型语言")]),n._v(" "),s("p",[n._v("Javascript超集： A.包含与兼容所有JS特性，支持共存 B.支持渐进式引入与升级")]),n._v(" "),s("p",[n._v("(2)TypeScript是一种静态类型的弱类型语言")]),n._v(" "),s("p",[n._v("静态类型的优点：")]),n._v(" "),s("p",[n._v("A.可读性增强：基于语法解析TSDoc,ide增强")]),n._v(" "),s("p",[n._v("B.可维护性增强：在编译阶段暴露大部分错误=>多人合作大型项目中，可以获得更好的稳定性和开发效率")]),n._v(" "),s("p",[n._v("(3)Typescript是Javascript的超集，具有可选的类型并可以编译成纯JS")]),n._v(" "),s("h2",{attrs:{id:"二、typescript优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、typescript优缺点"}},[n._v("#")]),n._v(" 二、Typescript优缺点")]),n._v(" "),s("h3",{attrs:{id:"_1、优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、优点"}},[n._v("#")]),n._v(" 1、优点：")]),n._v(" "),s("p",[n._v("（1）增强代码的可维护性，尤其在大型项目开发中效果显著")]),n._v(" "),s("p",[n._v("（2）友好地在编译器提示错误，在编译阶段就能检查类型，发现大部分错误")]),n._v(" "),s("p",[n._v("（3）支持最新的JS的特性")]),n._v(" "),s("p",[n._v("（4）繁荣的生态圈，typescript被普遍使用，多种框架都支持，尤其是Vue3")]),n._v(" "),s("h3",{attrs:{id:"_2、缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、缺点"}},[n._v("#")]),n._v(" 2、缺点：")]),n._v(" "),s("p",[n._v("（1）插件库兼容不够完美 ​")]),n._v(" "),s("p",[n._v("（2）增加前期开发成本")]),n._v(" "),s("h2",{attrs:{id:"三、运行typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、运行typescript"}},[n._v("#")]),n._v(" 三、运行Typescript")]),n._v(" "),s("p",[n._v("例如，创建一个test.ts文件，")]),n._v(" "),s("p",[n._v("（1）npm i -g typescript")]),n._v(" "),s("p",[n._v("tsc -v 查看tsc版本")]),n._v(" "),s("p",[n._v("tsc --init 初始化 使用命令：tsc test.ts ,可将TS文件转化为JS文件")]),n._v(" "),s("p",[n._v("（2）npm i -g ts-node 使用命令：ts-node test.ts 可以直接执行TS文件")]),n._v(" "),s("p",[n._v("（3）npm i -D tslib @types/node 如果（2）之后运行还会报错，就再安装（3）")]),n._v(" "),s("h2",{attrs:{id:"四、基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、基本类型"}},[n._v("#")]),n._v(" 四、基本类型")]),n._v(" "),s("h3",{attrs:{id:"_1、非typescript新增类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、非typescript新增类型"}},[n._v("#")]),n._v(" 1、非Typescript新增类型")]),n._v(" "),s("p",[n._v("（1）boolean（布尔值）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// boolean\nconst isRight: boolean = true;\nconst isleft: boolean = false;\nconsole.log(isRight, isleft);//true false\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("（2）number（数字）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// number\nlet numberOne: number = 123;\nlet numberTwo: number = 999;\nconsole.log(numberOne, numberTwo);//123 999\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("（3）string（字符串）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// string\nlet yourName: string = 'baby',\n    yourGender: string = 'female';\nconsole.log(yourName, yourGender);//baby female\nlet adult: string = `your name is ${yourName},your sex is ${yourGender}`;//模板字符串\nconsole.log(adult);//your name is baby,your sex is female\nlet another: string = \"my name is \" + yourName + \"my gender is \" + yourGender;//字符串拼接\nconsole.log(another);//my name is babymy gender is female\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("p",[n._v("（4）Array（数组）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// Array\nlet isArray1: string[] = ['1', '2', '3'];//string[]\nconsole.log(isArray1);//[ '1', '2', '3' ]\nlet isArray2: number[] = [1, 2, 3];//number[]\nconsole.log(isArray2);//[ 1, 2, 3 ]\nlet isArray3: Array<number> = [1, 2, 3];//数组泛型：Array<number>\nconsole.log(isArray3);//[ 1, 2, 3 ]\nlet isArray4: Array<string> = ['1', '2', '3'];//数组泛型：Array<string>\nconsole.log(isArray4);//[ '1', '2', '3' ]\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("p",[n._v("（5）null")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// null\nconst nl: null = null;\nconsole.log(nl);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("（6）undefined")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// undefined\nconst und: undefined = undefined;\nconsole.log(und);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("默认情况下"),s("code",[n._v("null")]),n._v("和"),s("code",[n._v("undefined")]),n._v("是所有类型的子类型。 就是说你可以把 "),s("code",[n._v("null")]),n._v("和"),s("code",[n._v("undefined")]),n._v("赋值给"),s("code",[n._v("number|string")]),n._v("等类型的变量。")]),n._v(" "),s("p",[n._v("（7）Object（对象）")]),n._v(" "),s("p",[s("code",[n._v("object")]),n._v("表示非原始类型，也就是除"),s("code",[n._v("number")]),n._v("，"),s("code",[n._v("string")]),n._v("，"),s("code",[n._v("boolean")]),n._v("，"),s("code",[n._v("symbol")]),n._v("，"),s("code",[n._v("null")]),n._v("或"),s("code",[n._v("undefined")]),n._v("之外的类型。使用"),s("code",[n._v("object")]),n._v("类型，就可以更好的表示像"),s("code",[n._v("Object.create")]),n._v("这样的API。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 对象类型\nlet myObject:object = {};\n​\n// 非严格模式下，可以这样；严格模式下，myObject不能被重新赋值\nmyObject=undefined;\nmyObject=null;\n​\n// Object有用内置对象\nlet bigObject:Object = {};\nbigObject=1;\nbigObject='a'\nbigObject=true\nbigObject=undefined\nbigObject=null\n​\n// 空对象类型\nlet emptyObject:{} = {};\nemptyObject=1\nemptyObject='a'\nemptyObject=true\nemptyObject=undefined\nemptyObject=null\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br")])]),s("p",[n._v("（8）Function（函数）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 函数\nfunction add(x:number,y:number):number{//两个参数\n    return x+y\n}\nfunction subtract(...number:number[]):number{//多个参数\n    let sum=0;\n    for(let i=0;i<number.length;i++) sum+=number[i]\n    return sum;\n}\nconst minus=function(x:number,y:number):number{//函数另一个表示方式\n    return x-y\n}\nconst multiply=function(x:number,y:number,z?:number):number{//三个参数\n    return z?x*y*z:x*y\n}\nmultiply(1,2)\nfunction defaultFun(x: number, y: number=0): number {\n    return x/y\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br")])]),s("h3",{attrs:{id:"_2、typescript新增类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、typescript新增类型"}},[n._v("#")]),n._v(" 2、Typescript新增类型")]),n._v(" "),s("p",[n._v("（1）Tuple（元祖）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// Tuple（元祖）:允许表示一个已知元素数量和类型的数组，各元素的类型不必相同\n//定义myTuple的第一个元素只能是字符串，第二个只能是数字\nlet myTuple: [string, number];\nmyTuple = ['hello', 10]; // OK\n// myTuple = [10, 'hello']; // error\n​\n//访问元素，当访问不存在的元素时，会报错\nconsole.log(myTuple[0]);//hello\nmyTuple[0] = 'hello world';\nconsole.log(myTuple);//[ 'hello world', 10 ]\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[n._v("（2）enum（枚举类型）")]),n._v(" "),s("p",[n._v("普通枚举：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// enum（枚举类型）：支持枚举值到枚举名的正反向映射\nenum Operate {\n    add = '+',\n    mult = '*'\n}\nconsole.log(Operate['add'] === '+');//true\nconsole.log(Operate['+'] === 'add');//false\nlet operation: Operate = Operate.add;\nconsole.log(operation);//+\n​\nenum Mycolor {\n    red, yellow, blue\n}\nconsole.log(Mycolor['red'] === 0);//true\nconsole.log(Mycolor[0] === 'red');//true\nlet myCol: Mycolor = Mycolor.yellow;\nlet hisCol: string = Mycolor[1]\nconsole.log(myCol, hisCol);//1 yellow\n​\n// 默认值\nenum People {\n    Linda = 1,\n    Jhon,\n    Lihua\n}\nlet per: string = People[2];\nconsole.log(per);//Jhon\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br")])]),s("p",[n._v("枚举类型的字符串枚举和常量枚举：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 字符串枚举\nenum Person {\n    name = 'Lucky',\n    age = 19,\n    sex = 'female'\n}\nconst pname: Person = Person.name,\n    page: Person = Person.age;\nconsole.log(pname, page);//Lucky 19\n​\n// 常量枚举\nconst enum Student {\n    sname,\n    sage,\n    ssex\n}\nconst student: Student[] = [Student.sname, Student.sage, Student.ssex];\nconsole.log(student);//[ 0, 1, 2 ]\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br")])]),s("p",[n._v("（3）any（任意类型）")]),n._v(" "),s("p",[n._v("any：表示任意类型， 可以被任何类型分配，也可以分配给任何类型;任意类型，是所有类型的子类型")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("//把any类型分配给其他类型\nlet otherType1: any\nlet otherType2: any = otherType1;\nlet otherType3: unknown = otherType1;\nlet otherType4: void = otherType1;\n​\nlet otherType5: undefined = otherType1;\nlet otherType6: null = otherType1;\nlet otherType7: number = otherType1;\nlet otherType8: string = otherType1;\nlet otherType9: boolean = otherType1;\n// 报错:不能将类型“any”分配给类型“never”\n// let val_never:never = val;\n​\n//把其他类型分配给any\notherType1 = 'hello';\notherType1 = 110;\notherType1 = true;\notherType1 = null;\notherType1 = undefined;\n​\notherType1 = unknown;// 报错:“unknown”仅表示类型，但在此处却作为值使用\notherType1 = never;// 报错:“never”仅表示类型，但在此处却作为值使用\notherType1 = any;// 报错:“any”仅表示类型，但在此处却作为值使用\notherType1 = void;// 报错:应为表达式\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br")])]),s("p",[n._v("另外，any虽然可以代表任意类型，但是能不用就不要用，这是默认的代码规范问题.")]),n._v(" "),s("p",[n._v("（4）unknown")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 把unknown类型分配给其他类型\nlet myType: unknown;\nlet myType1: any = myType;\nlet myType2: unknown = myType;\nlet myType3: string = myType;//报错\nlet myType4: number = myType;//报错\nlet myType5: boolean = myType;//报错\nlet myType6: null = myType;//报错\nlet myType7: undefined = myType;//报错\n​\n// 把其他类型分配给unknown类型\nmyType = '';\nmyType = 0;\nmyType = true;\nmyType = undefined;\nval = null;\n​\nmyType = void;//报错\nmyType = any;//报错\nmyType = unknown;//报错\nmyType = never;//报错\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("p",[n._v("与any任意类型相比，因为unknown是未知类型，所以只能进行 ?, typeof, instanceof等有限操作.")]),n._v(" "),s("p",[n._v("（5）never")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// never：是任何类型的子类型，也可以赋值给任何类型；然而，没有类型是never的子类型或可以赋值给never类型（除了never本身之外）\n// 返回never的函数必须存在无法达到的终点\nfunction throwError(message: string): never {\n    throw new Error(message);\n}\n// 返回never的函数必须存在无法达到的终点\nfunction infiniteLoop(): never {\n    while (true) {\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[s("code",[n._v("never")]),n._v("类型表示的是那些永不存在的值的类型。 例如， "),s("code",[n._v("never")]),n._v("类型是那些会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型； 变量也可能是 "),s("code",[n._v("never")]),n._v("类型，当它们被永不为真的类型保护所约束时。")]),n._v(" "),s("p",[n._v("（6）interface（接口）")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 接口\nconst hisObj={\n    name:'胡琴',\n    age:19,\n    sex:'boy'\n}\nhisObj.name='lucky'\n​\n// 具有一个和jisObj相同属性的对象\nlet p1:Object={\n    name:'dog',\n    age:20\n}//这种方式不具有针对性\n​\n// （1）接口（具有针对性）\ninterface Children{\n    name:string,\n    age:number,\n    sex:string\n}\nlet pp1:Children={\n    name:'dog',\n    age:20,\n    sex:'female'\n}\n​\n// （2）函数接口\ninterface Push{\n    (x:number,y:number):number\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br")])]),s("p",[n._v("另外，")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("interface Myobj {\n    // 只读属性：约束属性不可在对象初始化外赋值\n    readonly cardId: number;\n    name: string;\n    sex: 'male' | 'female';\n    age: number;\n    // 可选属性：定义该属性可以不存在\n    hobby?: string;\n    // 任意属性：约束属性都必须是该属性的子类型\n    [key: string]: any;\n}\n​\n// 对象类型\nconst obj: Myobj = {\n    cardId: 2020213028,\n    name: 'Lucky',\n    sex: 'female',\n    age: 19,\n    hobby: 'reading'\n}\n​\n// const o:Myobj={//报错：缺少name属性，hobby可缺省\n//  cardId:2020213026,\n//  sex:'female',\n//  age:18\n// }\nconsole.log(obj);\n// {\n//   cardId: 2020213028,\n//   name: 'Lucky',\n//   sex: 'female',\n//   age: 19,\n//   hobby: 'reading'\n// }\nconsole.log(obj.cardId);//2020213028\nconsole.log(obj.shortcoming = 'Math');//Math\nconsole.log(obj.cardId = 2020213026);//Cannot assign to 'cardId' because it is a read-only property.\n​\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);